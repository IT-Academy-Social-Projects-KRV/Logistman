// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
    [Migration("20220522154248_AddSeed")]
    partial class AddSeed
========
    [Migration("20220519142819_Renamed Role entities and added Seeds")]
    partial class RenamedRoleentitiesandaddedSeeds
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.CarCategoryEntity.CarCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CarCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D"
                        });
                });

            modelBuilder.Entity("Core.Entities.CarEntity.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<float>("LoadCapacity")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TechnicalPassport")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vin")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 4,
                            Color = "Червоний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 3, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 824.4033f,
                            Model = "S 731 D",
                            RegistrationNumber = "4STOEF723EE7XBONP8OC",
                            TechnicalPassport = "O2DCWYTFPKEAF5GAHK1K",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "728D5F4WOH1CG1FHS"
========
                            CategoryId = 2,
                            Color = "Синій",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 824.19965f,
                            Model = "P 623 O",
                            RegistrationNumber = "BK1EQN2X80O6E5XWHB2W",
                            TechnicalPassport = "HA4NNRZVSG8YVSWAVV4D",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "Y1FTNQHK70JO31GDR"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 2,
                            Color = "Чорний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 738.7338f,
                            Model = "J 573 Z",
                            RegistrationNumber = "4SRUE6474NMVB3ITDASV",
                            TechnicalPassport = "X82PFV0SLXWOO24LDKQQ",
                            UserId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            Vin = "WPT63D9M9IKN1VP2F"
========
                            CategoryId = 3,
                            Color = "Синій",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 748.8656f,
                            Model = "D 802 U",
                            RegistrationNumber = "QAL8N1M6O7PC27U48E89",
                            TechnicalPassport = "8F7PVTH45PIN69PI1IUJ",
                            UserId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            Vin = "UHDPD6XUFSWIJA3WD"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Color = "Жовтий",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 676.8f,
                            Model = "Q 262 T",
                            RegistrationNumber = "Y68ZXGSK2BOCCV9RMJYO",
                            TechnicalPassport = "E3108VA56K8MQYUZVEB6",
                            UserId = "a4ffba1f-2bad-451a-9ad3-a8e35f1b989f",
                            Vin = "ICDJD76SJSNHCV58Q"
========
                            Color = "Чорний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 816.4727f,
                            Model = "A 988 S",
                            RegistrationNumber = "26SHB3QKOOFLQB6GA6B9",
                            TechnicalPassport = "PQNQFF550Y2SUSBILOLR",
                            UserId = "1229b494-9a5c-47af-9759-e987cbb1d4b2",
                            Vin = "7U4OCK6D9BPPZCJ22"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 4,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 3,
                            Color = "Сірий",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 3, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 589.31256f,
                            Model = "J 548 B",
                            RegistrationNumber = "1LE09V87S8FLPMOI3ZE0",
                            TechnicalPassport = "GZ8MZUNN80TK09CXZ6WW",
                            UserId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            Vin = "V9W9GL2K2OZHL2DR0"
========
                            CategoryId = 2,
                            Color = "Синій",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 4, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 787.02655f,
                            Model = "O 752 P",
                            RegistrationNumber = "MQY0NVMKKKGISLQ3LYNP",
                            TechnicalPassport = "R35SZZIMQT3PH8HYDJJI",
                            UserId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            Vin = "54JTQGCRBNW0UIL61"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 5,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 4,
                            Color = "Зелений",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 499.50977f,
                            Model = "Z 785 K",
                            RegistrationNumber = "VKFARIW2HPW3YPPE1LOY",
                            TechnicalPassport = "5KJNAK76HNQL4U1P0AB1",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "IRPYE2A06ZBS9A1R0"
========
                            CategoryId = 3,
                            Color = "Чорний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 3, 13, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 565.36066f,
                            Model = "V 755 M",
                            RegistrationNumber = "R0K4SP2E520Y095919YH",
                            TechnicalPassport = "GSHDYC7IV5NWENRT5CK2",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "QYUKLWVDAQV80YJ65"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Color = "Зелений",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 2, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 664.8034f,
                            Model = "O 841 Z",
                            RegistrationNumber = "BY3O0DRAMSJ2RYB55VHG",
                            TechnicalPassport = "RABLRN9A4QF0OSE0AEAM",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "O0P7ASO06U3C71NIW"
========
                            Color = "Червоний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 760.6366f,
                            Model = "N 999 K",
                            RegistrationNumber = "4JDHC3PPW882IJEQAMIU",
                            TechnicalPassport = "W06MS9Z74KQPQJQ08FJ9",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "Y0SW0NQP6W05I3DQP"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Color = "Чорний",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 650.53705f,
                            Model = "E 903 J",
                            RegistrationNumber = "IEYKBVRLU12LAVJDGL3K",
                            TechnicalPassport = "LXBLCCSHWIZISN7TB8D5",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "8B4GCMC0NU2CRL2D7"
========
                            Color = "Синій",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 4, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 588.2732f,
                            Model = "P 392 M",
                            RegistrationNumber = "JBZTDIV388V16TW8BGFD",
                            TechnicalPassport = "TOL0MNHQG53FNI9K1UD6",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "SWM16XSTT16XOUQY6"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 8,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 2,
                            Color = "Зелений",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 643.97003f,
                            Model = "R 393 B",
                            RegistrationNumber = "JSNOQ288Y4BO0GW054WV",
                            TechnicalPassport = "4GGWLQX0E25LXALNPXMY",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "47FW2WBYX5RGW2CQ2"
========
                            CategoryId = 4,
                            Color = "Жовтий",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 600.7593f,
                            Model = "Q 179 D",
                            RegistrationNumber = "GENJB7H2820VOELGKXMB",
                            TechnicalPassport = "18PUEU3NN655PR6MIDGM",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "YVNZ1KL9F70R37PT5"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 9,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            CategoryId = 3,
                            Color = "Зелений",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 832.46014f,
                            Model = "V 896 Z",
                            RegistrationNumber = "PRPV9A7IYGIC9GPN1PG4",
                            TechnicalPassport = "ZUGDIAYVLT6T87P4C11N",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "SZEQ2ADC3JCR0VACC"
========
                            CategoryId = 4,
                            Color = "Синій",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 1, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 535.33105f,
                            Model = "K 152 X",
                            RegistrationNumber = "U5X7YY7G0Z2AT6FSJ2EQ",
                            TechnicalPassport = "X5YNYXO7ZIIJVYST3CMA",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "0R0WVNQOKR0BYP7A9"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Color = "Жовтий",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 4, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 464.95175f,
                            Model = "X 217 H",
                            RegistrationNumber = "P32QKBZNSEC1HZR7OH9Q",
                            TechnicalPassport = "NGH7TU0P3BDROPPM0JS1",
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            Vin = "KCNUTDKQNUNDN8MUW"
========
                            Color = "Білий",
                            CreationDate = new DateTimeOffset(new DateTime(2016, 7, 5, 17, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsVerified = true,
                            LoadCapacity = 619.53314f,
                            Model = "M 542 M",
                            RegistrationNumber = "IEVDLP7F3I646M121HBY",
                            TechnicalPassport = "RJKZ3MT2M18AIAHI0A5Z",
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            Vin = "XTSK1N7Y8I6JPZUVA"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        });
                });

            modelBuilder.Entity("Core.Entities.GoodCategoryEntity.GoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GoodCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "FOOD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DRINKS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CLOTHING"
                        },
                        new
                        {
                            Id = 4,
                            Name = "FOOTWEAR"
                        },
                        new
                        {
                            Id = 5,
                            Name = "HYGIENE PRODUCTS"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CAMOUFLAGE"
                        },
                        new
                        {
                            Id = 7,
                            Name = "MEDICINES"
                        });
                });

            modelBuilder.Entity("Core.Entities.OfferEntity.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatorRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("GoodCategoryId")
                        .HasColumnType("int");

                    b.Property<float>("GoodsWeight")
                        .HasColumnType("real");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("OfferCreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OfferPointId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedTripId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatorRoleId");

                    b.HasIndex("GoodCategoryId");

                    b.HasIndex("OfferCreatorId");

                    b.HasIndex("OfferPointId");

                    b.HasIndex("RelatedTripId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "collaborative compress Spur hard drive Tunnel copying multi-byte Soft Hill Shores Libyan Arab Jamahiriya Human payment engineer Home & Jewelery bypassing process improvement calculate Electronics & Shoes Moroccan Dirham Small Rubber Pants Data Heights Papua New Guinea revolutionize Kids, Automotive & Tools Global Intranet.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 7,
                            GoodsWeight = 18.269161f,
                            IsClosed = false,
                            OfferCreatorId = "762dd1e0-f2bb-4baa-8f2c-82d6d480df29",
                            OfferPointId = 1,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Markets innovate Balanced Baht communities Light Product Finland silver channels communities Baby & Books Wisconsin Tasty Frozen Soap Guyana Dollar Sleek Quality-focused Missouri.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 6,
                            GoodsWeight = 126.26133f,
                            IsClosed = false,
                            OfferCreatorId = "a59f1cac-b55c-4177-867a-76ce07d54dbf",
                            OfferPointId = 1,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "next-generation Shores redundant multi-byte Lead overriding silver budgetary management Lithuanian Litas bus Electronics composite reboot Awesome Fresh Computer Auto Loan Account Cambridgeshire Brazilian Real Checking Account Cliff Tools, Movies & Home pixel array Kids, Music & Outdoors Proactive knowledge user Sleek Soft Car Unbranded Concrete Shirt matrix Checking Account.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 61.76999f,
                            IsClosed = false,
                            OfferCreatorId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            OfferPointId = 2,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 6, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "copying Missouri Planner rich New Israeli Sheqel Senior tan monitor Forges calculating.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 600.98145f,
                            IsClosed = false,
                            OfferCreatorId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            OfferPointId = 2,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "azure Garden fuchsia ability hard drive protocol primary Executive website Applications programming Music & Garden Specialist Bedfordshire Corporate hacking Checking Account violet SSL Savings Account deposit Optional Visionary Antigua and Barbuda Avon Incredible Plastic Chair.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 10, 22, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 7,
                            GoodsWeight = 16.921375f,
                            IsClosed = false,
                            OfferCreatorId = "875c647c-6b1a-468c-97c5-294de8507eb3",
                            OfferPointId = 3,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 6, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Practical Plastic Chicken Refined Producer Home Loan Account Cambridgeshire Fantastic Plastic Shirt Incredible Rubber Pants Administrator Object-based Sleek Practical Metal Pants Wallis and Futuna Point leading edge bandwidth digital Robust Intelligent Functionality cross-platform scalable calculating HTTP Branding indigo Home Loan Account multi-byte Gorgeous Grocery & Tools.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 99.324585f,
                            IsClosed = false,
                            OfferCreatorId = "6ae73725-bd78-4bd1-ad55-c92ec6ae41c4",
                            OfferPointId = 3,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Ranch Falls withdrawal Factors RAM bus Fords PCI Connecticut Assistant Stream JBOD San Marino Checking Account Bedfordshire Baby & Clothing Multi-lateral withdrawal Nevada Colorado Personal Loan Account.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 13, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 425.77927f,
                            IsClosed = false,
                            OfferCreatorId = "944e6c2f-7692-4c93-9a9c-81c30905a158",
                            OfferPointId = 4,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Front-line Sports & Clothing Belize Dollar indexing primary Papua New Guinea Money Market Account deposit grey payment digital Street.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 10, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 394.5672f,
                            IsClosed = false,
                            OfferCreatorId = "4eeb7de8-2ace-412e-8bd2-54ee369484ff",
                            OfferPointId = 4,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "circuit Ergonomic Rubber Cheese Ranch Forward Division Checking Account eyeballs TCP mindshare salmon Forge concept Movies & Books IB Rubber hierarchy Borders Credit Card Account Handcrafted Metal Fish Credit Card Account Consultant Outdoors input.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 7, 23, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 6,
                            GoodsWeight = 628.3656f,
                            IsClosed = false,
                            OfferCreatorId = "8c17e1ba-57da-4b33-9559-badad2641fc3",
                            OfferPointId = 5,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 6, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "International strategic Sharable RAM communities digital e-business sensor e-services Bedfordshire Sleek Granite Hat bypassing Specialist Borders Baby payment Engineer maroon pink.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 23, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 267.8336f,
                            IsClosed = false,
                            OfferCreatorId = "3bf717ed-c2ae-4393-9ff7-5bece832e240",
                            OfferPointId = 5,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "back up Trail Security alliance mobile port scale payment International Credit Card Account Enhanced Texas Wooden Granite Wooden Sports & Electronics TCP Licensed.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 10, 23, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 795.2876f,
                            IsClosed = false,
                            OfferCreatorId = "8b605fbc-b858-4225-8458-aa9715844640",
                            OfferPointId = 6,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 7, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "invoice Granite IB strategize fuchsia intuitive generating Auto Loan Account Proactive Pennsylvania optimizing Diverse Future Assistant 5th generation Sri Lanka Baby Lithuanian Litas Bedfordshire open-source ivory metrics exuding calculate ROI deploy open system Customer Investor.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 13, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 588.6934f,
                            IsClosed = false,
                            OfferCreatorId = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            OfferPointId = 6,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Money Market Account Representative Dynamic copy Wooden Montana input parsing programming invoice violet Refined Metal Table Unbranded Wooden Gloves definition Inlet Russian Federation Awesome Concrete Sausages demand-driven Aruban Guilder dot-com.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 323.01862f,
                            IsClosed = false,
                            OfferCreatorId = "8b605fbc-b858-4225-8458-aa9715844640",
                            OfferPointId = 7,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Soft Chief bricks-and-clicks enterprise Avon Consultant turn-key SSL Refined Soft Keyboard mindshare synergistic Awesome Fresh Fish Developer Movies & Tools Rubber calculating Sleek Handcrafted Fresh Tuna Mobility Walks.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 7, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 702.2551f,
                            IsClosed = false,
                            OfferCreatorId = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            OfferPointId = 7,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Plastic teal Plastic Avon overriding programming 6th generation communities Soft needs-based feed International Granite Rustic Wooden Sausages San Marino well-modulated.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 310.41092f,
                            IsClosed = false,
                            OfferCreatorId = "8c17e1ba-57da-4b33-9559-badad2641fc3",
                            OfferPointId = 8,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 1, 7, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "vortals indigo program Auto Loan Account back up repurpose Analyst functionalities Buckinghamshire asymmetric circuit.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 10, 22, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 710.86816f,
                            IsClosed = false,
                            OfferCreatorId = "3bf717ed-c2ae-4393-9ff7-5bece832e240",
                            OfferPointId = 8,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "AI Unbranded Small Granite Sausages optical open-source front-end Isle Avon Savings Account compelling Dynamic Generic Plastic Fish customized Spur Sports, Home & Sports mobile Buckinghamshire orange Handmade Turkmenistan exploit invoice Knoll Cotton Global.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 395.407f,
                            IsClosed = false,
                            OfferCreatorId = "8b605fbc-b858-4225-8458-aa9715844640",
                            OfferPointId = 9,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "neural-net system-worthy next generation Metal National withdrawal HTTP Parks Generic Granite Shirt Up-sized Corner Cotton Saint Helena niches parse Land Berkshire.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 6,
                            GoodsWeight = 116.9796f,
                            IsClosed = false,
                            OfferCreatorId = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            OfferPointId = 9,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "24 hour Integrated panel Norway Wooden platforms Auto Loan Account Operations capacitor SMTP Ergonomic Cotton Salad West Virginia online Administrator matrix withdrawal calculating instruction set payment Wooden global Euro next generation Haven neural transmitting hacking Money Market Account.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 5,
                            GoodsWeight = 847.3365f,
                            IsClosed = false,
                            OfferCreatorId = "8b605fbc-b858-4225-8458-aa9715844640",
                            OfferPointId = 10,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 7, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "e-commerce invoice hacking pink strategize Savings Account optimize Handmade Fresh Mouse architect Mauritius invoice Borders violet Universal deposit Berkshire tan Borders Balboa green mesh Engineer.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 5,
                            GoodsWeight = 110.36929f,
                            IsClosed = false,
                            OfferCreatorId = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            OfferPointId = 10,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Mews Versatile Diverse black Awesome Fresh Cheese Concrete neural-net Small payment Marketing quantify deposit Technician FTP Sleek invoice real-time Handmade Concrete Computer.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 23, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 609.37854f,
                            IsClosed = false,
                            OfferCreatorId = "a4ffba1f-2bad-451a-9ad3-a8e35f1b989f",
                            OfferPointId = 11,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Bangladesh parsing copying uniform hack Buckinghamshire whiteboard Baby, Home & Garden Buckinghamshire Games & Music overriding Unions Avon Steel web services encompassing New York violet Kuwaiti Dinar Chief multi-byte Cliff solutions index Steel Namibia.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 668.4513f,
                            IsClosed = false,
                            OfferCreatorId = "1229b494-9a5c-47af-9759-e987cbb1d4b2",
                            OfferPointId = 11,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Rubber Plastic Small Steel Shoes object-oriented Money Market Account Intelligent Granite Shirt indexing partnerships upward-trending Netherlands Antilles wireless American Samoa supply-chains Prairie local RAM back up Kids & Tools Supervisor vortals.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 22, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 7,
                            GoodsWeight = 58.465134f,
                            IsClosed = false,
                            OfferCreatorId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            OfferPointId = 12,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 5, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Director matrix application Connecticut deposit Ergonomic Rubber Hat empowering Polarised syndicate grey Bond Markets Units European Composite Unit (EURCO) deploy payment alarm Generic Metal Mouse.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 22, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 952.275f,
                            IsClosed = false,
                            OfferCreatorId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            OfferPointId = 12,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 5, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "demand-driven red Cambridgeshire human-resource Small Soft Ball Solutions Hill systems connect Optimization programming Bedfordshire USB Personal Loan Account multimedia Curve Specialist deposit asynchronous parse.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 17, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 568.51733f,
                            IsClosed = false,
                            OfferCreatorId = "762dd1e0-f2bb-4baa-8f2c-82d6d480df29",
                            OfferPointId = 13,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 6, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Rustic Concrete Computer Representative Fantastic Buckinghamshire Iraq Bahamas Ports generating array AI Liaison portals e-markets Pound Sterling Auto Loan Account Generic Steel Bike schemas convergence Fort Universal Czech Republic yellow ubiquitous Automated Hawaii Producer Wooden Rial Omani.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 13, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 6,
                            GoodsWeight = 546.89856f,
                            IsClosed = false,
                            OfferCreatorId = "a59f1cac-b55c-4177-867a-76ce07d54dbf",
                            OfferPointId = 13,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Radial Avon interfaces index interactive analyzing Taiwan Licensed Handcrafted Soft Chair multi-state viral Solomon Islands Dollar Representative Portugal monitor Garden Gorgeous Soft Soap plum Team-oriented.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 395.20547f,
                            IsClosed = false,
                            OfferCreatorId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            OfferPointId = 14,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "TCP architect Intelligent Soft Hat Estate Generic Intelligent Plastic Bike bypass Hawaii THX archive artificial intelligence parse Awesome Shoes, Outdoors & Garden Tasty Colombian Peso USB.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 684.08136f,
                            IsClosed = false,
                            OfferCreatorId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            OfferPointId = 14,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Center Generic Cotton Mouse National Cotton Malaysian Ringgit programming South Dakota New York Stand-alone parsing Nebraska Secured ROI cross-platform withdrawal Central Branding Bermudian Dollar (customarily known as Bermuda Dollar) Music.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 7, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 930.12854f,
                            IsClosed = false,
                            OfferCreatorId = "944e6c2f-7692-4c93-9a9c-81c30905a158",
                            OfferPointId = 15,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 6, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "dedicated Directives Nevada Bedfordshire port Factors metrics Causeway orange SQL overriding analyzing SMS Drives Re-contextualized Licensed Rubber Pants Peso Uruguayo Street Diverse.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 9, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 390.08023f,
                            IsClosed = false,
                            OfferCreatorId = "4eeb7de8-2ace-412e-8bd2-54ee369484ff",
                            OfferPointId = 15,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 1, 7, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "calculating Isle Kids Mill Iraq Auto Loan Account payment feed national productize Direct Plains Handcrafted Fresh Gloves proactive Managed content Unbranded Plastic Table Auto Loan Account strategic Handcrafted Cotton Ball Berkshire Operations pink Supervisor Investor Outdoors, Toys & Clothing capacity Bedfordshire maroon Object-based.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 5,
                            GoodsWeight = 810.4967f,
                            IsClosed = false,
                            OfferCreatorId = "8c17e1ba-57da-4b33-9559-badad2641fc3",
                            OfferPointId = 16,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 2, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Future 24/365 calculate Persevering Tasty Fresh Ball SDD website Manager Fantastic Steel Keyboard Lodge revolutionary invoice transmit Haven deposit Washington National benchmark enterprise.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 618.17096f,
                            IsClosed = false,
                            OfferCreatorId = "3bf717ed-c2ae-4393-9ff7-5bece832e240",
                            OfferPointId = 16,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Mobility Synergistic Open-source engineer programming Islands Ireland Global Arkansas Steel Developer Bedfordshire Future RAM Cotton heuristic initiatives Euro Albania mission-critical Tactics Money Market Account back up Bahraini Dinar Internal.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 297.76202f,
                            IsClosed = false,
                            OfferCreatorId = "875c647c-6b1a-468c-97c5-294de8507eb3",
                            OfferPointId = 17,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Fantastic Passage navigating feed HTTP invoice secured line Intuitive New York Home Loan Account evolve.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 5, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 652.03516f,
                            IsClosed = false,
                            OfferCreatorId = "6ae73725-bd78-4bd1-ad55-c92ec6ae41c4",
                            OfferPointId = 17,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 5, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 2,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Tasty Technician Progressive Borders Representative out-of-the-box deposit Oklahoma Direct deposit maroon EXE open-source actuating adapter.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 10, 17, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 864.35956f,
                            IsClosed = false,
                            OfferCreatorId = "875c647c-6b1a-468c-97c5-294de8507eb3",
                            OfferPointId = 18,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 3, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "transmit hard drive quantifying Creek transmitter neural 3rd generation migration Small Frozen Pants Dale Assurance Rest Beauty, Beauty & Sports Concrete Research upward-trending convergence Licensed Plastic Bacon neural Belarussian Ruble Fantastic Plastic Salad Director Gorgeous Rubber Pizza Games, Baby & Clothing Savings Account.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 22, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 1,
                            GoodsWeight = 976.43115f,
                            IsClosed = false,
                            OfferCreatorId = "6ae73725-bd78-4bd1-ad55-c92ec6ae41c4",
                            OfferPointId = 18,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Ohio deposit Manat Fantastic 24/7 synthesizing hybrid Corners blue Burundi Franc e-business Tools & Home Executive Product payment Greenland strategize.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 2,
                            GoodsWeight = 981.36743f,
                            IsClosed = false,
                            OfferCreatorId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            OfferPointId = 19,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "firewall multi-byte pink Fresh Customer Identity olive synthesizing Beauty, Tools & Outdoors Inlet Bhutan payment bypassing Licensed Incredible Rubber Keyboard Borders Checking Account optimizing Steel Ridges magnetic Cameroon Investor withdrawal.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 6, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 4,
                            GoodsWeight = 652.57825f,
                            IsClosed = false,
                            OfferCreatorId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            OfferPointId = 19,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 7, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorRoleId = 1,
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Description = "Architect adapter Israel 24/7 Legacy Usability payment radical revolutionize Architect Awesome Concrete Ball Research Home Circles data-warehouse Alley Security hierarchy payment.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 8, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 5,
                            GoodsWeight = 77.20522f,
                            IsClosed = false,
                            OfferCreatorId = "a4ffba1f-2bad-451a-9ad3-a8e35f1b989f",
                            OfferPointId = 20,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 4, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
========
                            Description = "Pound Sterling transmit transmitter Awesome Granite Pants maroon Fork invoice users 1080p blue Cape Verde Escudo Bedfordshire calculate optical didactic Awesome Rubber Shoes enhance programming tangible Clothing, Electronics & Movies Steel.",
                            ExpirationDate = new DateTimeOffset(new DateTime(2022, 7, 7, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            GoodCategoryId = 3,
                            GoodsWeight = 41.65277f,
                            IsClosed = false,
                            OfferCreatorId = "1229b494-9a5c-47af-9759-e987cbb1d4b2",
                            OfferPointId = 20,
                            StartDate = new DateTimeOffset(new DateTime(2022, 7, 5, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        });
                });

            modelBuilder.Entity("Core.Entities.PointEntity.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Settlement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "місто Остріг, Рівненська область, вулиця Східна",
                            Latitude = 50.328792,
                            Longitude = 26.527293,
                            Order = 0,
                            Region = "Рівненська область",
                            Settlement = "Острог"
                        },
                        new
                        {
                            Id = 2,
                            Address = "місто Шпанів, Рівненська область, вулиця Вереснева",
                            Latitude = 50.663542,
                            Longitude = 26.257569,
                            Order = 0,
                            Region = " Рівненська область",
                            Settlement = "Шпанів"
                        },
                        new
                        {
                            Id = 3,
                            Address = "місто Луцьк, Волинська область, вулиця Хрещата",
                            Latitude = 50.723970999999999,
                            Longitude = 25.386282000000001,
                            Order = 0,
                            Region = "Волинська область",
                            Settlement = "Луцьк"
                        },
                        new
                        {
                            Id = 4,
                            Address = "місто Дніпро, Дніпропетровська область, вулиця Юрія Савченко",
                            Latitude = 48.462322270000001,
                            Longitude = 35.021573400000001,
                            Order = 0,
                            Region = "Дніпропетровська область",
                            Settlement = "Дніпро"
                        },
                        new
                        {
                            Id = 5,
                            Address = "місто Нікольське, Донецька область, вулиця Пушкіна",
                            Latitude = 47.200732350000003,
                            Longitude = 37.3148804,
                            Order = 0,
                            Region = "Донецька область",
                            Settlement = "Нікольське"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Макаровка, Донецька область",
                            Latitude = 47.779212000000001,
                            Longitude = 36.801640999999996,
                            Order = 0,
                            Region = "Донецька область",
                            Settlement = "Макаровка"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Гаврилівка, Харківська область, вулиця Коцюбинського",
                            Latitude = 49.672877999999997,
                            Longitude = 35.660035000000001,
                            Order = 0,
                            Region = "Харківська область",
                            Settlement = "Дніпро"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Ульянівка, Харківська область",
                            Latitude = 49.371445999999999,
                            Longitude = 35.513638,
                            Order = 0,
                            Region = "Харківська область",
                            Settlement = "Ульянівка"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Новодонецьк, Донецька область, вулиця Благовісна",
                            Latitude = 48.633740000000003,
                            Longitude = 36.980499999999999,
                            Order = 0,
                            Region = "Донецька область",
                            Settlement = "Новодонецьк"
                        },
                        new
                        {
                            Id = 10,
                            Address = "місто Дніпро, Дніпропетровська область, вулиця Юрія Савченко",
                            Latitude = 48.460256999999999,
                            Longitude = 35.018729,
                            Order = 0,
                            Region = "Дніпропетровська область",
                            Settlement = "Дніпро"
                        },
                        new
                        {
                            Id = 11,
                            Address = "місто Львів, Львівська область, просп. Вячеслава Черновола, 11",
                            Latitude = 49.846894900000002,
                            Longitude = 4.0253360999999996,
                            Order = 0,
                            Region = "Львівська область",
                            Settlement = "Львів"
                        },
                        new
                        {
                            Id = 12,
                            Address = "місто Ужгород, Закарпатская область, вулиця Шишкіна, 1",
                            Latitude = 48.610622999999997,
                            Longitude = 22.317772999999999,
                            Order = 0,
                            Region = "Закарпатская область",
                            Settlement = "Ужгород"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Маків, Хмельницька  область, провулок Прорізний",
                            Latitude = 48.784157,
                            Longitude = 26.702999999999999,
                            Order = 0,
                            Region = "Хмельницька  область",
                            Settlement = "Маків"
                        },
                        new
                        {
                            Id = 14,
                            Address = "місто Вінниця, Вінницька область, вулиця Братславська",
                            Latitude = 49.232585,
                            Longitude = 28.494243999999998,
                            Order = 0,
                            Region = "Вінницька область",
                            Settlement = "Вінниця"
                        },
                        new
                        {
                            Id = 15,
                            Address = "місто Миколаїв, Миколаївська область, вулиця Слов'янська",
                            Latitude = 47.032940848000003,
                            Longitude = 32.007182749999998,
                            Order = 0,
                            Region = "Миколаївська область",
                            Settlement = "Миколаїв"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Центральний пайон, місто Миколаїв, Миколаївська область, вулиця Дачна",
                            Latitude = 47.044604,
                            Longitude = 32.030366999999998,
                            Order = 0,
                            Region = "Миколаївська область",
                            Settlement = "Миколаїв"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Бобринець, Кіровоградська  область, вулиця Орджонікідзе",
                            Latitude = 48.061315,
                            Longitude = 32.158811,
                            Order = 0,
                            Region = "Кіровоградська  область",
                            Settlement = "Бобринець"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Горбово, Чернігівська область, 16311",
                            Latitude = 51.45984,
                            Longitude = 31.561633,
                            Order = 0,
                            Region = "Чернігівська область",
                            Settlement = "Горбово"
                        },
                        new
                        {
                            Id = 19,
                            Address = "місто Біла церква, Київська область, вулиця Кірова",
                            Latitude = 49.807687086999998,
                            Longitude = 30.1144958,
                            Order = 0,
                            Region = "Київська область",
                            Settlement = "Біла церква"
                        },
                        new
                        {
                            Id = 20,
                            Address = "місто Житомир, Житомирська область, Богунський район",
                            Latitude = 50.259729999999998,
                            Longitude = 28.649229999999999,
                            Order = 0,
                            Region = "Житомирська область",
                            Settlement = "Житомир"
                        });
                });

            modelBuilder.Entity("Core.Entities.RatingEntity.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatorUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<string>("RatedUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("RatingDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstimatorUserId");

                    b.HasIndex("RatedUserId");

                    b.HasIndex("TripId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Core.Entities.RefreshTokenEntity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Core.Entities.ReportEntity.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReporterUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("ReportingDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportedUserId");

                    b.HasIndex("ReporterUserId");

                    b.HasIndex("TripId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Core.Entities.RoleEntity.OfferRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OfferRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SENDER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RECIPIENT"
                        });
                });

            modelBuilder.Entity("Core.Entities.TripEntity.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnded")
                        .HasColumnType("bit");

                    b.Property<float>("LoadCapacity")
                        .HasColumnType("real");

                    b.Property<int>("MaxRouteDeviationKm")
                        .HasColumnType("int");

                    b.Property<int?>("PointId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TransportationCarId")
                        .HasColumnType("int");

                    b.Property<string>("TripCreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("TransportationCarId");

                    b.HasIndex("TripCreatorId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381",
                            ConcurrencyStamp = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381",
========
                            Id = "69fa01c1-e668-4614-a01d-e9716a07a2d5",
                            ConcurrencyStamp = "69fa01c1-e668-4614-a01d-e9716a07a2d5",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "0af11548-2ad9-452b-82d3-008f6ec7bbbc",
                            ConcurrencyStamp = "0af11548-2ad9-452b-82d3-008f6ec7bbbc",
========
                            Id = "425a592e-8fc7-463f-87a7-77f5d5ac05a9",
                            ConcurrencyStamp = "425a592e-8fc7-463f-87a7-77f5d5ac05a9",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "103c5f41-8d61-4fe3-b97e-9e683c666ea3",
                            ConcurrencyStamp = "103c5f41-8d61-4fe3-b97e-9e683c666ea3",
========
                            Id = "1d0fcc4b-3661-4313-9eb3-90ac13f5390a",
                            ConcurrencyStamp = "1d0fcc4b-3661-4313-9eb3-90ac13f5390a",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Name = "Logist",
                            NormalizedName = "LOGIST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            UserId = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "8b605fbc-b858-4225-8458-aa9715844640",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "875c647c-6b1a-468c-97c5-294de8507eb3",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "8c17e1ba-57da-4b33-9559-badad2641fc3",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "944e6c2f-7692-4c93-9a9c-81c30905a158",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "a4ffba1f-2bad-451a-9ad3-a8e35f1b989f",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "762dd1e0-f2bb-4baa-8f2c-82d6d480df29",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
                        },
                        new
                        {
                            UserId = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            RoleId = "ecb9730e-36fb-4ca9-8ef8-e8bb5d5f0381"
========
                            UserId = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "6ae73725-bd78-4bd1-ad55-c92ec6ae41c4",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "3bf717ed-c2ae-4393-9ff7-5bece832e240",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "4eeb7de8-2ace-412e-8bd2-54ee369484ff",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "1229b494-9a5c-47af-9759-e987cbb1d4b2",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "a59f1cac-b55c-4177-867a-76ce07d54dbf",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
                        },
                        new
                        {
                            UserId = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            RoleId = "69fa01c1-e668-4614-a01d-e9716a07a2d5"
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Core.Entities.UserEntity.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("HasCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset>("RegistrationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "e7a5c59a-b887-4043-bd3d-71b57733b5aa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f296b83c-7dbd-4dc9-902c-cb4c0db2fc4c",
========
                            Id = "fe0aae3f-c4b8-4e65-a9dd-37dc84f6395e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66e23b16-717a-45f3-91b6-b7801cd29994",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "chorrny228@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CHORRNY228@GMAIL.COM",
                            NormalizedUserName = "CHORRNY228@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAEChq9vg2lx2bK57HBw5o3JxDORmpuFEaYXWKY7VYrNRl+YObdZApdJ5DcQP8S3BRQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4d6a94ef-6d6a-4954-9a9f-02fcc5e20fb8",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEKrinxDfGhsESgCrZ7X/faPALOT6vF1I514WNAlo/W5YHx3ISwUmpM0ZzdWgm4jBRg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3bb613bd-69cb-467c-87b7-f1a0e860f426",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "chorrny228@gmail.com",
                            HasCar = false,
                            Name = "Vadym",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(4435), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(4967), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Chorrny"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "8b605fbc-b858-4225-8458-aa9715844640",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e168cea8-5413-4199-899d-0cbe6652471a",
========
                            Id = "283e4baf-a46d-467e-8c3c-d7c58fa41046",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "deeb1aac-dc76-44fa-b6b7-607380a11224",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "oppaiarchmaster@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "OPPAIARCHMASTER@GMAIL.COM",
                            NormalizedUserName = "OPPAIARCHMASTER@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAEJ4NqdZjvoGntsU42/512QSu58SWo1bgc0GmK3cLgeuVC1nHetdz6/6Lz+bt+0Ageg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cd880d2c-e349-4444-bfd0-73523394cdb0",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEB3/Kpast7pb6ZCJmZu23Py3TIhQxdsYAnMxVJJ6ZsAFlg2yrFQ/C9b0Ye3+mVRgTg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5bfc7653-6fcd-4466-87c5-1f1ae4d7d9ed",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "oppaiarchmaster@gmail.com",
                            HasCar = false,
                            Name = "Vlad",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5627), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6645), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Sevastyanov"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "a4ffba1f-2bad-451a-9ad3-a8e35f1b989f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d3bef42-6fc1-4f81-8468-3c49a1010067",
========
                            Id = "1229b494-9a5c-47af-9759-e987cbb1d4b2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fe842564-eb07-4889-bdb5-3772700c0fad",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "andrewchepeliuk@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANDREWCHEPELIUK@GMAIL.COM",
                            NormalizedUserName = "ANDREWCHEPELIUK@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAECeci6a6UsJGxnKhbiuNDb4XBQhpbDdjhPdaELzMmWM+LXIaIFeM2LJ3EFcT8faxjQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d86e35f-e432-4975-bce1-b3339b6b9dc7",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEPeNiGWr3vxfYnIuIzTe/MilrYlaeuH/4G516aAEV9AlwHTlrWcnu2I6dsCl1VcfrA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "886c952f-2ba3-4142-a45d-bc2e18cd08e8",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "andrewchepeliuk@gmail.com",
                            HasCar = false,
                            Name = "Andrii",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5680), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6709), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Chepeliuk"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "8c17e1ba-57da-4b33-9559-badad2641fc3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32f29126-6f0e-4cd9-8847-9797ddfaad29",
========
                            Id = "3bf717ed-c2ae-4393-9ff7-5bece832e240",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1108343c-954e-42d3-a50c-affd980cdc0e",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "marynakernychna@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARYNAKERNYCHNA@GMAIL.COM",
                            NormalizedUserName = "MARYNAKERNYCHNA@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAEI1F66xS4lGwk1VhvFO6IvCSLCKO4JyhROVI7jgVITqf3LjU6qxl1zXW8959MPtjJw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b1d03fa9-2e05-46e5-b5e8-cde3a31cdd10",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEJ7gXNFV0R9IP8NgzAAe8uhccQY3iu8FF8tFP0NWu2cdL98aDwHH0+FS3gMkXE+Cwg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3f494238-2261-4def-9659-659534d1d98b",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "marynakernychna@gmail.com",
                            HasCar = false,
                            Name = "Maryna",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5690), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6727), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Kernychna"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "762dd1e0-f2bb-4baa-8f2c-82d6d480df29",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "af517b83-d897-44e0-8ed0-1456f71d142d",
========
                            Id = "a59f1cac-b55c-4177-867a-76ce07d54dbf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "88fb5fee-cd6d-47a7-bc9f-c624b8692e83",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "yevhen.pasichnyk@oa.edu.ua",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "YEVHEN.PASICHNYK@OA.EDU.UA",
                            NormalizedUserName = "YEVHEN.PASICHNYK@OA.EDU.UA",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAEGfZdYx9MfOJbdY3G0J7+hBfdvRDlbVSh795FbygHhs+u2or02H3s7YOLC/0r/9P1Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ed22e9f8-4710-43fd-b1c8-966ce6e19782",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEOGhbB2v+wmTz8gCWHQVaXN0TWbWCMu8ekilsZ3bewzKGCouvgEg5PYoMbFWCtEGSA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f9c854dc-18a4-45ff-9e86-54a1a6011993",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "yevhen.pasichnyk@oa.edu.ua",
                            HasCar = false,
                            Name = "Eugen",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5700), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6743), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Pasichnyk"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "875c647c-6b1a-468c-97c5-294de8507eb3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa28b311-d2e0-4a40-bce0-7c677898ac49",
========
                            Id = "6ae73725-bd78-4bd1-ad55-c92ec6ae41c4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25904b66-99d2-4fd6-bcd4-045b90b4a36d",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "pashunskyi@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PASHUNSKYI@GMAIL.COM",
                            NormalizedUserName = "PASHUNSKYI@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAECtncuy6W+xCqBdl6E3jBbssjTjTbFyBO6ia72+vUZp/l/vztez37dyrlpcDFh8rEQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d12ee6b3-2fe7-48b7-9304-9f1cabdf8a1b",
========
                            PasswordHash = "AQAAAAEAACcQAAAAELVbhhl2QSjFAFg2edwEHgoFx6PSKUqtgw4yqvSryelsgU41qrRMwxoBuIsUw50Lyg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd0c5ece-2629-4be8-87f4-406d073acdf3",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "pashunskyi@gmail.com",
                            HasCar = false,
                            Name = "Volodya",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5712), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6840), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Pashunskyi"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "944e6c2f-7692-4c93-9a9c-81c30905a158",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "80d0e30a-7c89-468c-ba1e-d6a65d34c9f9",
========
                            Id = "4eeb7de8-2ace-412e-8bd2-54ee369484ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c047eba9-c20e-4471-9e7b-ddb793f0e9e5",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "antonina.loboda@oa.edu.ua",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANTONINA.LOBODA@OA.EDU.UA",
                            NormalizedUserName = "ANTONINA.LOBODA@OA.EDU.UA",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAELJahAF+HA3XGUVks0e1fOkLrn6+Oc5sYP4GLSNZlv5S9v45Pm2AjbORaq+Hs4s7bw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32904fce-068d-4e1e-be0a-b8dd581a3efc",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEPkP/UALVXFuYAvPXwwr5o0cYizkiWVeYUp9CsoMEwnuX6kldtpUz7+Q5yM1jb/MvA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e827eee6-5499-4258-b0cd-6f203441b029",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "antonina.loboda@oa.edu.ua",
                            HasCar = false,
                            Name = "Antonina",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5722), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6854), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Loboda"
                        },
                        new
                        {
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            Id = "50662ecc-f177-41fb-95b7-5ba272c2a4ce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "531076e1-c2dc-4b87-bd9f-f744c6543d07",
========
                            Id = "07bd7727-f9d1-4258-a15d-a322adc28233",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "031166ce-9b33-4e34-801d-3a161ca1a45c",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Email = "sergeyeremenko@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SERGEYEREMENKO@GMAIL.COM",
                            NormalizedUserName = "SERGEYEREMENKO@GMAIL.COM",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            PasswordHash = "AQAAAAEAACcQAAAAECXwn6gQIXfDihQR4kgSFH7tiGbTQI6Ie0wd1KI4T0kJtCz3uNstghOyotJx/j4iRg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "866d6435-e8dc-465c-aab2-d98562eed5e6",
========
                            PasswordHash = "AQAAAAEAACcQAAAAEFjXuwi8t0aB5N+UPsJEDL0NfN+ltM7ezjDDkibTjcphuGOmnc9W5TttMXRyjwIJaw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b03b1b2e-9c41-486b-a21c-154a08af724e",
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "sergeyeremenko@gmail.com",
                            HasCar = false,
                            Name = "Sergey",
<<<<<<<< HEAD:Infrastructure/Migrations/20220522154248_AddSeed.Designer.cs
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 22, 15, 42, 47, 566, DateTimeKind.Unspecified).AddTicks(5731), new TimeSpan(0, 0, 0, 0, 0)),
========
                            RegistrationDate = new DateTimeOffset(new DateTime(2022, 5, 19, 14, 28, 18, 252, DateTimeKind.Unspecified).AddTicks(6869), new TimeSpan(0, 0, 0, 0, 0)),
>>>>>>>> 47d92608795b289f469182b5cda3fce8c9961070:Infrastructure/Migrations/20220519142819_Renamed Role entities and added Seeds.Designer.cs
                            Surname = "Eremenko"
                        });
                });

            modelBuilder.Entity("Core.Entities.CarEntity.Car", b =>
                {
                    b.HasOne("Core.Entities.CarCategoryEntity.CarCategory", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.OfferEntity.Offer", b =>
                {
                    b.HasOne("Core.Entities.RoleEntity.OfferRole", "OfferRole")
                        .WithMany("Offers")
                        .HasForeignKey("CreatorRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.GoodCategoryEntity.GoodCategory", "GoodCategory")
                        .WithMany("Offers")
                        .HasForeignKey("GoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("Offers")
                        .HasForeignKey("OfferCreatorId");

                    b.HasOne("Core.Entities.PointEntity.Point", "Point")
                        .WithMany("Offers")
                        .HasForeignKey("OfferPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TripEntity.Trip", "Trip")
                        .WithMany("Offers")
                        .HasForeignKey("RelatedTripId");

                    b.Navigation("GoodCategory");

                    b.Navigation("OfferRole");

                    b.Navigation("Point");

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.PointEntity.Point", b =>
                {
                    b.HasOne("Core.Entities.TripEntity.Trip", "Trip")
                        .WithMany("Points")
                        .HasForeignKey("TripId");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Core.Entities.RatingEntity.Rating", b =>
                {
                    b.HasOne("Core.Entities.UserEntity.User", "EstimatorUser")
                        .WithMany("EstimatorRatings")
                        .HasForeignKey("EstimatorUserId");

                    b.HasOne("Core.Entities.UserEntity.User", "RatedUser")
                        .WithMany("RatedRatings")
                        .HasForeignKey("RatedUserId");

                    b.HasOne("Core.Entities.TripEntity.Trip", "Trip")
                        .WithMany("Ratings")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstimatorUser");

                    b.Navigation("RatedUser");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Core.Entities.RefreshTokenEntity.RefreshToken", b =>
                {
                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.ReportEntity.Report", b =>
                {
                    b.HasOne("Core.Entities.UserEntity.User", "ReportedUser")
                        .WithMany("ViolationReports")
                        .HasForeignKey("ReportedUserId");

                    b.HasOne("Core.Entities.UserEntity.User", "ReporterUser")
                        .WithMany("ReporterReports")
                        .HasForeignKey("ReporterUserId");

                    b.HasOne("Core.Entities.TripEntity.Trip", "Trip")
                        .WithMany("Reports")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportedUser");

                    b.Navigation("ReporterUser");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Core.Entities.TripEntity.Trip", b =>
                {
                    b.HasOne("Core.Entities.PointEntity.Point", null)
                        .WithMany("Trips")
                        .HasForeignKey("PointId");

                    b.HasOne("Core.Entities.CarEntity.Car", "Car")
                        .WithMany("Trips")
                        .HasForeignKey("TransportationCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("Trips")
                        .HasForeignKey("TripCreatorId");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.CarCategoryEntity.CarCategory", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Core.Entities.CarEntity.Car", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Core.Entities.GoodCategoryEntity.GoodCategory", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Core.Entities.PointEntity.Point", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Core.Entities.RoleEntity.OfferRole", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Core.Entities.TripEntity.Trip", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("Points");

                    b.Navigation("Ratings");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Core.Entities.UserEntity.User", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("EstimatorRatings");

                    b.Navigation("Offers");

                    b.Navigation("RatedRatings");

                    b.Navigation("RefreshTokens");

                    b.Navigation("ReporterReports");

                    b.Navigation("Trips");

                    b.Navigation("ViolationReports");
                });
#pragma warning restore 612, 618
        }
    }
}
